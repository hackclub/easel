(print "importing:")
(import extras)
(extras:zoob)
(import example)
(print 5)
(example:tosty)
(print "")
(define list (#l 1 (+ 1 1) 3))
(print list)
(print (#nth list 0))
(print (#len list))
(print (#push list 5))
(print (#set list 1 42))
(print list)

(define string "hello")
(print string)
(print (#nth string 0))
(print (#len string))
(print (#push string 5))

(print "do local scope:")
(do
  (define a 5) ~ this defines a variable
  (print a)
)
(print "")

(print (int (/ 5.7 12.9)))

(print "for loop:")
(for i (10 1 -2)
  (print i)
)
(print "")

(print "repeat and scope:")
(define b 0)
(print b)
(repeat 11
  (define b (+ b 1))
  (print b)
)
(print b)
(print "")


(print "while")
(define i 0)
(while (< i 10)
  (print i)
  (set i (+ i 1))
)
(print i)
(print "")


(print "functions: ")
(define function 
  (fn (a b)
    (print (+ a b))
  )
)
(function 1 2)
(define add +)
(print (add 5 5))
(print "")


(print "if:")
(if (<= 5 52)
  (print "le")
  (print "!le"))
(print "")

(define fib
  (fn (n)
    (if (<= n 2)
      1
      ~ else
      (+
        (fib (- n 1))
        (fib (- n 2))
      )
    )
  )
)
(print "fibonacci")
(print (fib 7))

(print "recursive functions with if:")
(define fact
  (fn (n)
    (if (<= n 1)
      1
      ~ else
      (*
        n
        (fact (- n 1))
      )
    )
  )
)
(print (fact 1))
(print "")

(print "if test")
(if false
  (print "true")
)
~ comment at eof