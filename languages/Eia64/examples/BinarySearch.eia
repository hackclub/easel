include(
  static:std:string
)

private fn binarySearch(array: Array<Int>, x: Int): Int {
  var left = 0
  var right = len(array) - 1

  until (left <= right) {
    let mid = left + (right - left) / 2
    if (array[mid] == x) {
      return mid
    }
    if (array[mid] < x) {
      left = mid + 1
    } else {
      right = mid - 1
    }
  }
  return -1
}

private fn toNumberArray(array: Array<String>): Array<Int> {
  let size = len(array)
  let numeric = makeArray<Int>(size, 0)
  for (var i = 0, i < size, i++) {
    numeric[i] = int(array[i])
  }
  return numeric
}

fn searches() {
  println("Hello! I'm a binary searcher")
  until (true) {
    print("Enter numbers in ascending numbers seperated by commas: ")
    var input = readln().trim()
    until (input.contains(" ")) {
      input = input.replace(" ", "")
    }
    let numbers = toNumberArray(input.split(","))
    println("Now enter a number to search")
    let target = int(readln())
    println("Located at index " + binarySearch(numbers, target))
  }
}

fn main() {
  searches()
}
